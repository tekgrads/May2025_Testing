# Class 2: Git and GitHub

---

## 🧠 **GIT**

- **Git** is a **version control software**.
- It automatically **tracks the history** of changes made to files.
- Git is **open-source** and free to use.
- Mainly used for **team collaboration** on code projects.
- Can be integrated with platforms like **Bitbucket**.

### 🔄 Git Workflow - Basic Concepts

- **Staging**: Adding changes to a staging area (using `git add`).
- **Unstaging**: Removing changes from the staging area.
- **Committing**: Finalizing the changes to local repository (`git commit`).
- **Pushing**: Sending the committed changes to a **central repository** (like GitHub).

---

## 🌐 **GITHUB**

- GitHub is a **web-based UI** for managing Git repositories.
- Helps in **visualizing and managing** Git operations easily.
- Supports **pull requests, issues, branching, releases**, and more.

---

## 🌿 **Branching**

- **Branching** is creating a **copy of the main (master) branch** to work on features independently.
- Common practice: Create a **feature branch** for every new feature or bug fix.

```bash
# Example Commands
git checkout -b feature-branch    # Create and switch to a new branch
git add .                         # Stage changes
git commit -m "Your message"      # Commit changes
git push origin feature-branch    # Push to remote repository
